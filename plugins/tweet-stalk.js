const { cmd } = require('../command');
const axios = require('axios');

cmd({
  pattern: "xstalk",
  alias: ["twitterstalk", "twtstalk"],
  desc: "Get details about a Twitter/X user.",
  react: "üîç",
  category: "search",
  filename: __filename
}, async (conn, m, store, { from, quoted, q, reply }) => {
  try {
    if (!q) {
      return reply("‚ùå ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ·¥†·¥Ä ü…™·¥Ö ·¥õ·¥°…™·¥õ·¥õ·¥á Ä/x ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á.");
    }

    await conn.sendMessage(from, {
      react: { text: "‚è≥", key: m.key }
    });

    const apiUrl = `https://delirius-apiofc.vercel.app/tools/xstalk?username=${encodeURIComponent(q)}`;
    const { data } = await axios.get(apiUrl);

    if (!data || !data.status || !data.data) {
      return reply("‚ö†Ô∏è Failed to fetch Twitter/X user details. Ensure the username is correct.");
    }

    const user = data.data;
    const verifiedBadge = user.verified ? "‚úÖ" : "‚ùå";

    const caption = `‚ï≠‚îÅ‚îÅ‚îÅ„Äî *·¥õ·¥°…™·¥õ·¥õ·¥á Ä/x s·¥õ·¥Ä ü·¥ã·¥á Ä* „Äï‚îÅ‚îÅ‚îÅ‚ä∑\n`
      + `‚îÉüë§ *…¥·¥Ä·¥ç·¥á:* ${user.name}\n`
      + `‚îÉüîπ *·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á:* @${user.username}\n`
      + `‚îÉ‚úîÔ∏è *·¥†·¥á Ä…™“ì…™·¥á·¥Ö:* ${verifiedBadge}\n`
      + `‚îÉüë• *“ì·¥è ü ü·¥è·¥°·¥á Äs:* ${user.followers_count}\n`
      + `‚îÉüë§ *“ì·¥è ü ü·¥è·¥°…™…¥…¢:* ${user.following_count}\n`
      + `‚îÉüìù *·¥õ·¥°·¥á·¥á·¥õs:* ${user.tweets_count}\n`
      + `‚îÉüìÖ *·¥ä·¥è…™…¥·¥á·¥Ö:* ${user.created}\n`
      + `‚îÉüîó *·¥ò Ä·¥è“ì…™ ü·¥á:* [Click Here](${user.url})\n`
      + `‚ï∞‚îÅ‚îÅ‚îÅ‚™º\n\n`
      + `> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ö è ô è ·¥õ·¥á·¥Ñ ú*`;

    await conn.sendMessage(from, {
      image: { url: user.avatar },
      caption: caption
    }, { quoted: m });

  } catch (error) {
    console.error("Error:", error);
    reply("‚ùå An error occurred while processing your request. Please try again.");
  }
});
