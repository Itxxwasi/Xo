const axios = require("axios");
const { cmd } = require("../command");

cmd({
  pattern: "srepo",
  desc: "Fetch information about a GitHub repository.",
  category: "search",
  react: "üçÉ",
  filename: __filename
}, async (conn, m, store, { from, args, reply }) => {
  try {
    const repoName = args.join(" ");
    if (!repoName) {
      return reply("‚ùå ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä …¢…™·¥õ ú·¥ú ô  Ä·¥á·¥ò·¥ès…™·¥õ·¥è Ä è …™…¥ ·¥õ ú·¥á “ì·¥è Ä·¥ç·¥Ä·¥õ üìå `·¥è·¥°…¥·¥á Ä/ Ä·¥á·¥ò·¥è`.");
    }

    const apiUrl = `https://api.github.com/repos/${repoName}`;
    const { data } = await axios.get(apiUrl);

    let responseMsg = `üìÅ *ùêÜùê¢ùê≠ùêáùêÆùêõ ùêëùêûùê©ùê®ùê¨ùê¢ùê≠ùê®ùê´ùê≤ ùêàùêßùêüùê®* üìÅ\n\n`;
    responseMsg += `üìå *…¥·¥Ä·¥ç·¥á*: ${data.name}\n`;
    responseMsg += `üîó *·¥ú Ä ü*: ${data.html_url}\n`;
    responseMsg += `üìù *·¥Ö·¥ás·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥*: ${data.description || "No description"}\n`;
    responseMsg += `‚≠ê *s·¥õ·¥Ä Äs*: ${data.stargazers_count}\n`;
    responseMsg += `üç¥ *“ì·¥è Ä·¥ãs*: ${data.forks_count}\n`;
    responseMsg += `üë§ *·¥è·¥°…¥·¥á Ä*: ${data.owner.login}\n`;
    responseMsg += `üìÖ *·¥Ñ Ä·¥á·¥Ä·¥õ·¥á·¥Ö At*: ${new Date(data.created_at).toLocaleDateString()}\n`;
    responseMsg += `\n> *¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ö è ô è ·¥õ·¥á·¥Ñ ú*`;

    await conn.sendMessage(from, { text: responseMsg }, { quoted: m });
  } catch (error) {
    console.error("GitHub API Error:", error);
    reply(`‚ùå Error fetching repository data: ${error.response?.data?.message || error.message}`);
  }
});
