const config = require("../config");
const { cmd } = require('../command');
const { getAnti, setAnti, initializeAntiDeleteSettings } = require('../data/antidel');

initializeAntiDeleteSettings();

cmd({
    pattern: "antidelete",
    alias: ['antidel', 'antid'],
    desc: "Configure the AntiDelete system",
    category: "misc",
    filename: __filename
},
async (conn, mek, m, { reply, q, isOwner, from }) => {
    if (!isOwner) {
      return await conn.sendMessage(from, {
        text: "*üìõ ·¥õ ú…™s …™s ·¥Ä…¥ ·¥è·¥°…¥·¥á Ä-·¥è…¥ ü è ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.*"
      }, { quoted: mek });
    }
    try {
        const command = q?.toLowerCase();

        switch (command) {
            case 'on':
                await setAnti('gc', true);
                await setAnti('dm', true);
                return reply('_·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á ·¥á…¥·¥Ä ô ü·¥á·¥Ö “ì·¥è Ä …¢ Ä·¥è·¥ú·¥òs ·¥Ä…¥·¥Ö ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á ·¥ç·¥áss·¥Ä…¢·¥ás._');

            case 'off gc':
                await setAnti('gc', false);
                return reply('_·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö “ì·¥è Ä …¢ Ä·¥è·¥ú·¥òs._');

            case 'off dm':
                await setAnti('dm', false);
                return reply('_·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö “ì·¥è Ä ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á ·¥ç·¥áss·¥Ä…¢·¥ás._');

            case 'set gc':
                const gcStatus = await getAnti('gc');
                await setAnti('gc', !gcStatus);
                return reply(`_…¢ Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á …™s …¥·¥è·¥° ${!gcStatus ? 'enabled' : 'disabled'}._`);

            case 'set dm':
                const dmStatus = await getAnti('dm');
                await setAnti('dm', !dmStatus);
                return reply(`_·¥Ö·¥ç ·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á …™s …¥·¥è·¥° ${!dmStatus ? 'enabled' : 'disabled'}._`);

            case 'set all':
                await setAnti('gc', true);
                await setAnti('dm', true);
                return reply('_·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á ·¥á…¥·¥Ä ô ü·¥á·¥Ö “ì·¥è Ä ·¥Ä ü ü ·¥Ñ ú·¥Ä·¥õs._');

            case 'status':
                const currentDmStatus = await getAnti('dm');
                const currentGcStatus = await getAnti('gc');
                return reply(`_·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á s·¥õ·¥Ä·¥õ·¥ús_\n\n*·¥Ö·¥ç:* ${currentDmStatus ? 'Enabled' : 'Disabled'}\n*…¢ Ä·¥è·¥ú·¥òs:* ${currentGcStatus ? 'Enabled' : 'Disabled'}`);

            default:
                return reply(`-- *Œ±Œ∑—ÇŒπ‚àÇ—î‚Ñì—î—Ç—î ¬¢œÉ–º–ºŒ±Œ∑‚àÇ gœÖŒπ‚àÇ—î* --
‚Ä¢ \`\`.·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á ·¥è…¥\`\` ‚Äì ·¥á…¥·¥Ä ô ü·¥á Œ±Œ∑—ÇŒπ‚àÇ—î‚Ñì—î—Ç—î g‚ÑìœÉ–≤Œ±‚Ñì‚Ñì—É
‚Ä¢ \`\`.·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á ·¥è“ì“ì …¢·¥Ñ\`\` ‚Äì ‚àÇŒπ—ïŒ±–≤‚Ñì—î ∆íœÉ—è g—èœÉœÖœÅ ¬¢–ΩŒ±—Ç—ï
‚Ä¢ \`\`.·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á ·¥è“ì“ì ·¥Ö·¥ç\`\` ‚Äì Disable for DMs
‚Ä¢ \`\`.·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á s·¥á·¥õ …¢·¥Ñ\`\` ‚Äì Toggle for groups
‚Ä¢ \`\`.·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á s·¥á·¥õ ·¥Ö·¥ç\`\` ‚Äì Toggle for DMs
‚Ä¢ \`\`.·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á s·¥á·¥õ ·¥Ä ü ü\`\` ‚Äì ·¥á…¥·¥Ä ô ü·¥á “ì·¥è Ä ·¥Ä ü ü ·¥Ñ ú·¥Ä·¥õs
‚Ä¢ \`\`.·¥Ä…¥·¥õ…™·¥Ö·¥á ü·¥á·¥õ·¥á s·¥õ·¥Ä·¥õ·¥ús\`\` ‚Äì ·¥Ñ ú·¥á·¥Ñ·¥ã ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ s·¥õ·¥Ä·¥õ·¥ús`);
        }
    } catch (e) {
        console.error("AntiDelete error:", e);
        return reply("An error occurred while processing the command.");
    }
});
