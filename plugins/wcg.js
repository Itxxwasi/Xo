const { cmd } = require("../command");
const WordChainGame = require("../lib/wcg");
const wcg = new WordChainGame();

// 1) Start Easy mode
// 1) Start a new Word Chain Game
cmd(
  {
    pattern: "wcg",
    desc: "Start a Word Chain Game.",
    category: "games",
    react: "üß©",
    filename: __filename,
  },
  async (conn, mek, m, { reply, args }) => {
    try {
      const chatId = m.chat;
      let game = wcg.getGame(chatId);

      if (game && game.status === "active") {
        return reply("·¥Ä ·¥°·¥è Ä·¥Ö ·¥Ñ ú·¥Ä…™…¥ …¢·¥Ä·¥ç·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è …™…¥ ·¥ò Ä·¥è…¢ Ä·¥áss!");
      }

      // The first arg after the command is our difficulty
      const diff = args[0]?.toLowerCase();
      const difficulty = ["easy", "medium", "hard"].includes(diff) ? diff : "medium";

      game = wcg.createGame(chatId, difficulty);
      game.addPlayer(m.sender);

      return reply(
        `·¥°·¥è Ä·¥Ö ·¥Ñ ú·¥Ä…™…¥ …¢·¥Ä·¥ç·¥á s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö (${difficulty} ·¥ç·¥è·¥Ö·¥á)!  
·¥ç…™…¥…™·¥ç·¥ú·¥ç ·¥°·¥è Ä·¥Ö  ü·¥á…¥…¢·¥õ ú: ${game.minLength}  ü·¥á·¥õ·¥õ·¥á Äs  
·¥õ…™·¥ç·¥á ·¥ò·¥á Ä ·¥õ·¥ú Ä…¥: ${game.turnTime} s·¥á·¥Ñ·¥è…¥·¥Ös  

·¥õ è·¥ò·¥á "·¥ä·¥è…™…¥" ·¥õ·¥è ·¥ò·¥Ä Ä·¥õ…™·¥Ñ…™·¥ò·¥Ä·¥õ·¥á. …¢·¥Ä·¥ç·¥á s·¥õ·¥Ä Ä·¥õs ·¥° ú·¥á…¥ ·¥Ä·¥õ  ü·¥á·¥Äs·¥õ 2 ·¥ò ü·¥Ä è·¥á Äs ·¥ä·¥è…™…¥.`
      );
    } catch (err) {
      console.error(err);
      return reply("An error occurred while starting the Word Chain game.");
    }
  }
);

// 2) Join / trigger start when enough players
cmd(
  {
    pattern: "join",
    desc: "Join the Word Chain game.",
    category: "games",
    react: "üß©",
    filename: __filename,
  },
  async (conn, mek, m, { reply }) => {
    try {
      const chatId = m.chat;
      const game = wcg.getGame(chatId);
      if (!game) {
        return reply("…¥·¥è ·¥°·¥è Ä·¥Ö ·¥Ñ ú·¥Ä…™…¥ …¢·¥Ä·¥ç·¥á …™s …™…¥ ·¥ò Ä·¥è…¢ Ä·¥áss. s·¥õ·¥Ä Ä·¥õ ·¥è…¥·¥á ·¥°…™·¥õ ú `·¥°·¥Ñ…¢`.");
      }

      if (game.status === "waiting") {
        if (game.addPlayer(m.sender)) {
          await reply(" è·¥è·¥ú ·¥ä·¥è…™…¥·¥á·¥Ö ·¥õ ú·¥á …¢·¥Ä·¥ç·¥á! ·¥°·¥Ä…™·¥õ…™…¥…¢ “ì·¥è Ä ·¥ç·¥è Ä·¥á ·¥ò ü·¥Ä è·¥á Äs...");
          if (game.players.size >= 2) {
            game.start();
            return reply(
              `…¢·¥Ä·¥ç·¥á s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö!  
“ì…™ Äs·¥õ ·¥ò ü·¥Ä è·¥á Ä: @${game.currentPlayer.split("@")[0]}'s ·¥õ·¥ú Ä…¥.  
s·¥õ·¥Ä Ä·¥õ ·¥°…™·¥õ ú ·¥Ä…¥ è ·¥°·¥è Ä·¥Ö ·¥è“ì ·¥Ä·¥õ  ü·¥á·¥Äs·¥õ ${game.minLength}  ü·¥á·¥õ·¥õ·¥á Äs.  
 è·¥è·¥ú  ú·¥Ä·¥†·¥á ${game.turnTime} s·¥á·¥Ñ·¥è…¥·¥Ös ·¥ò·¥á Ä ·¥õ·¥ú Ä…¥.`,
              {
                mentions: [ game.currentPlayer ]
              }
            );
          }
        } else {
          return reply(" è·¥è·¥ú‚Äô·¥†·¥á ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥ä·¥è…™…¥·¥á·¥Ö!");
        }
      } else {
        return reply("·¥õ ú·¥á …¢·¥Ä·¥ç·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ä·¥Ñ·¥õ…™·¥†·¥á ‚Äî ·¥ä·¥ús·¥õ ·¥ò ü·¥Ä è  è·¥è·¥ú Ä ·¥õ·¥ú Ä…¥!");
      }
    } catch (err) {
      console.error(err);
      return reply("An error occurred while joining the Word Chain game.");
    }
  }
);
