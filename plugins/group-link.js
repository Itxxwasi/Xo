const { cmd } = require('../command');
const config = require('../config');
const { getBuffer } = require('../lib/functions2');
const prefix = config.PREFIX;

cmd({
    pattern: "linkgroup",
    alias: ["link", "invite", "grouplink", "linkgc"],
    desc: "Get group invite link.",
    category: "group",
    filename: __filename,
}, async (conn, mek, m, {
    from, quoted, isGroup, sender, reply
}) => {
    try {
        if (!isGroup) return reply("‚ùå ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥Ñ·¥Ä…¥ ·¥è…¥ ü è  ô·¥á ·¥ús·¥á·¥Ö …™…¥ …¢ Ä·¥è·¥ú·¥òs.");

        const senderNumber = sender.split('@')[0];
        const botNumber = conn.user.id.split(':')[0] + '@s.whatsapp.net';

        const groupMetadata = await conn.groupMetadata(from);
        const participants = groupMetadata.participants || [];

        const groupAdmins = participants.filter(p => p.admin);
        const isBotAdmin = groupAdmins.some(p => p.id === botNumber);
        const isSenderAdmin = groupAdmins.some(p => p.id === sender);

        if (!isBotAdmin) return reply("‚ùå …™ …¥·¥á·¥á·¥Ö ·¥õ·¥è  ô·¥á ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ ·¥õ·¥è …¢·¥á·¥õ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò  ü…™…¥·¥ã.");
        if (!isSenderAdmin) return reply("‚ùå ·¥è…¥ ü è …¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.");

        const inviteCode = await conn.groupInviteCode(from);
        if (!inviteCode) return reply("‚ùå ·¥Ñ·¥è·¥ú ü·¥Ö…¥'·¥õ Íú∞·¥á·¥õ·¥Ñ ú ·¥õ ú·¥á …™…¥·¥†…™·¥õ·¥á ·¥Ñ·¥è·¥Ö·¥á.");

        const groupLink = `https://chat.whatsapp.com/${inviteCode}`;
        const groupName = groupMetadata.subject || "·¥ú…¥·¥ã…¥·¥è·¥°…¥";
        const groupOwner = groupMetadata.owner ? '@' + groupMetadata.owner.split('@')[0] : "·¥ú…¥·¥ã…¥·¥è·¥°…¥";
        const groupId = groupMetadata.id || from;
        const memberCount = participants.length;

        const caption = `
‚ï≠‚îÄ‚îÄ„Äî *ùô∂ùöÅùôæùöÑùôø ùôªùô∏ùôΩùô∫* „Äï‚îÄ‚îÄ‚¨£
‚îÉ üìç *…¥·¥Ä·¥ç·¥á:*  ${groupName}
‚îÉ üëë *·¥è·¥°…¥·¥á Ä:* ${groupOwner}
‚îÉ üÜî *…™·¥Ö:* ${groupId}
‚îÉ üîó *…™…¥·¥†…™·¥õ·¥á  ü…™…¥·¥ã:* ${groupLink}
‚îÉ üë• *·¥ç·¥á·¥ç ô·¥á Äs:* ${memberCount}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚¨£

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ö è ô è ·¥õ·¥á·¥Ñ ú*
        `.trim();

        let ppUrl = 'https://telegra.ph/file/6880771a42bad09dd6087.jpg';
        try {
            ppUrl = await conn.profilePictureUrl(from, 'image');
        } catch (e) { }

        const buffer = await getBuffer(ppUrl);
        return conn.sendMessage(from, {
            image: buffer,
            caption,
            mentions: [groupMetadata.owner]
        }, { quoted: m });

    } catch (err) {
        console.error("‚ùå Error in .linkgroup:", err);
        return reply(`‚ö†Ô∏è ·¥Ä…¥ ·¥á Ä Ä·¥è Ä ·¥è·¥Ñ·¥Ñ·¥ú Ä Ä·¥á·¥Ö: ${err.message || '·¥ú…¥·¥ã…¥·¥è·¥°…¥ ·¥á Ä Ä·¥è Ä'}`);
    }
});
