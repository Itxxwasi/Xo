const { cmd } = require('../command');
const axios = require('axios');

cmd({
  pattern: "ytstalk",
  alias: ["ytinfo"],
  desc: "Get details about a YouTube channel.",
  react: "üîç",
  category: "search",
  filename: __filename
}, async (conn, m, store, { from, quoted, q, reply }) => {
  try {
    if (!q) {
      return reply("‚ùå ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ·¥†·¥Ä ü…™·¥Ö  è·¥è·¥ú·¥õ·¥ú ô·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á ·¥è Ä …™·¥Ö.\n\n·¥áx·¥Ä·¥ç·¥ò ü·¥á: `. è·¥õs·¥õ·¥Ä ü·¥ã ·¥ç Ä ô·¥á·¥Äs·¥õ`");
    }

    await conn.sendMessage(from, {
      react: { text: "‚è≥", key: m.key }
    });

    const apiUrl = `https://delirius-apiofc.vercel.app/tools/ytstalk?channel=${encodeURIComponent(q)}`;
    const { data } = await axios.get(apiUrl, { timeout: 10000 });

    if (!data?.status || !data?.data) {
      return reply("‚ö†Ô∏è “ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è “ì·¥á·¥õ·¥Ñ ú  è·¥è·¥ú·¥õ·¥ú ô·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥Ö·¥á·¥õ·¥Ä…™ üs. ·¥ç·¥Ä·¥ã·¥á s·¥ú Ä·¥á ·¥õ ú·¥á ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á ·¥è Ä …™·¥Ö …™s ·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ.");
    }

    const yt = data.data;

    const caption = `‚ï≠‚îÅ‚îÅ‚îÅ„Äî *ùêòùêéùêîùêìùêîùêÅùêÑ ùêíùêìùêÄùêãùêäùêÑùêë* „Äï‚îÅ‚îÅ‚îÅ‚ä∑\n`
      + `‚îÉüë§ *·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á:* ${yt.username}\n`
      + `‚îÉüìä *s·¥ú ôs·¥Ñ Ä…™ ô·¥á Äs:* ${yt.subscriber_count}\n`
      + `‚îÉüé• *·¥†…™·¥Ö·¥á·¥ès:* ${yt.video_count}\n`
      + `‚îÉüîó *·¥Ñ ú·¥Ä…¥…¥·¥á ü  ü…™…¥·¥ã:* ${yt.channel}\n`
      + `‚ï∞‚îÅ‚îÅ‚îÅ‚™º\n\n`
      + `> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ö è ô è ·¥õ·¥á·¥Ñ ú*`;

    await conn.sendMessage(from, {
      image: { url: yt.avatar },
      caption: caption
    }, { quoted: m });

  } catch (error) {
    console.error("Error in ytstalk:", error);
    reply("‚ùå An error occurred while processing your request. Please try again.");
  }
});
